[project]
name = "pipefy-mcp-server"
version = "0.1.0"
description = "Pipefy MCP server that enables AI Agents to end-to-end manage your Pipefy pipes, create cards, and more."
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "mcp[cli]>=1.6.0",
    "pydantic-settings>=2.8.1",
]

[project.scripts]
pipefy-mcp-server = "pipefy_mcp.main:main"

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "pytest-cov>=6.1.1",
    "pytest-mock>=3.14.0",
    "ruff>=0.11.4",
]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/pipefy_mcp"]

[tool.hatch.version]
source = "vcs"
raw-options = { version_scheme = "no-guess-dev" }

[tool.hatch.build.hooks.vcs]
version-file = "src/pipefy_mcp/_version.py"

[tool.ruff]
lint.extend-select = ["I"]

[tool.pytest]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --no-header --tb=short"


[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "module"

markers = [
    "unit: marks a test as a unit test",
    "integration: marks a test as an integration test that requires database access"
]
